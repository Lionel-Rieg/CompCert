YARPGEN=yarpgen
MAX=300
PREFIX=ran%06.f
include ../rules.mk

KVX_CCOMPFLAGS += -funprototyped -fbitfields
CCOMPFLAGS += -funprototyped -fbitfields

TARGETS_C=$(shell seq --format $(PREFIX)/func.c 0 $(MAX)) \
	$(shell seq --format $(PREFIX)/driver.c 0 $(MAX)) \
	$(shell seq --format $(PREFIX)/init.h 0 $(MAX))
TARGETS_CCOMP_KVX_S=$(shell seq --format $(PREFIX)/func.ccomp.kvx.s 0 $(MAX)) \
	$(shell seq --format $(PREFIX)/driver.ccomp.kvx.s 0 $(MAX))
TARGETS_GCC_KVX_S=$(shell seq --format $(PREFIX)/func.gcc.kvx.s 0 $(MAX)) \
	$(shell seq --format $(PREFIX)/driver.gcc.kvx.s 0 $(MAX))
TARGETS_CCOMP_HOST_S=$(shell seq --format $(PREFIX)/func.ccomp.host.s 0 $(MAX)) \
	$(shell seq --format $(PREFIX)/driver.ccomp.host.s 0 $(MAX))
TARGETS_GCC_HOST_S=$(shell seq --format $(PREFIX)/func.gcc.host.s 0 $(MAX)) \
	$(shell seq --format $(PREFIX)/driver.gcc.host.s 0 $(MAX))
TARGETS_CCOMP_KVX_OUT=$(shell seq --format $(PREFIX)/example.ccomp.kvx.out 0 $(MAX))
TARGETS_GCC_KVX_OUT=$(shell seq --format $(PREFIX)/example.gcc.kvx.out 0 $(MAX))
TARGETS_GCC_HOST_OUT=$(shell seq --format $(PREFIX)/example.gcc.host.out 0 $(MAX))
TARGETS_CCOMP_HOST_OUT=$(shell seq --format $(PREFIX)/example.ccomp.host.out 0 $(MAX))
TARGETS_CMP=$(shell seq --format $(PREFIX)/example.kvx.cmp 0 $(MAX))

all:	$(TARGETS_CCOMP_KVX_OUT) $(TARGETS_GCC_KVX_OUT) $(TARGETS_GCC_HOST_OUT) $(TARGETS_CCOMP_HOST_OUT) $(TARGETS_CCOMP_KVX_S) $(TARGETS_GCC_KVX_S) $(TARGETS_GCC_HOST_S) $(TARGETS_CCOMP_HOST_S) $(TARGETS_CMP) $(TARGETS_C)

ran%/func.ccomp.kvx.s ran%/func.gcc.kvx.s ran%/func.ccomp.host.s ran%/func.gcc.host.s : ran%/init.h

ran%/example.ccomp.kvx: ran%/func.ccomp.kvx.o ran%/driver.ccomp.kvx.o 
	$(KVX_CCOMP) $(KVX_CCOMPFLAGS) $+ -o $@

ran%/example.gcc.kvx: ran%/func.gcc.kvx.o ran%/driver.gcc.kvx.o 
	$(KVX_CC) $(KVX_CFLAGS) $+ -o $@

ran%/example.gcc.host: ran%/func.gcc.host.o ran%/driver.gcc.host.o 
	$(CC) $(CFLAGS) $+ -o $@

ran%/example.ccomp.host: ran%/func.ccomp.host.o ran%/driver.ccomp.host.o 
	$(CCOMP) $(CCOMPFLAGS) $+ -o $@

ran%/driver.c ran%/func.c ran%/init.h:
	-mkdir ran$*
	$(YARPGEN) --seed=$* --out-dir=ran$*/ --std=c99

ran%/example.kvx.cmp : ran%/example.gcc.kvx.out ran%/example.ccomp.kvx.out
	cmp $+ > $@

.PHONY: all clean

clean:
	-rm -rf ran*
